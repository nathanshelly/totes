#! /usr/bin/env bash

# Determine which command is available to render the file
get_render_command() {
  if command -v mdcat > /dev/null; then
    echo 'mdcat'
  elif command -v bat > /dev/null; then
    echo 'bat'
  fi
}

# Determine the next note to render
get_note_to_render() {
  note_to_render="$1"
  if [[ -z $1 ]]; then
    # location based on XDG directory specification
    # ref - https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
    notes_path="${XDG_DATA_HOME:-$HOME/.local/share}/totes"

    if [[ ! -d $notes_path ]]; then
      echo "The notes directory - $notes_path - does not exist."
      # shellcheck disable=2016
      echo 'Try running the `install.sh` script again'
      # checks if this script is in a repo (should be true if it is symlinked)
      if git rev-parse HEAD > /dev/null 2>&1; then
        # display full path to install script if we can find it
        echo "path: $(git rev-parse --show-toplevel)/install.sh"
      fi
      exit 1
    fi

    # ref - https://github.com/koalaman/shellcheck/issues/1247
    # shellcheck disable=2012
    note_to_render="$(ls -At -- "$notes_path"/*.md | tail -n 1)"
    # update last read time to cycle through notes
  fi
  echo "$note_to_render"
}

render_command="$(get_render_command)"
note_to_render="$(get_note_to_render "$@")"

echo
"$render_command" "$note_to_render"
echo

printf "%s" " --> (n)ext, (q)uit, (x) save and quit "
read -r -s -n 1 user_action < /dev/tty

# ref - https://stackoverflow.com/a/37408702
if ! [[ "$user_action" =~ ^(x|X)$ ]]; then
  touch "$note_to_render"
fi
echo
case $user_action in
  n | N)
    totes
    ;;
  x | X) ;;
  *) ;;
esac
